[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ScRNA",
    "section": "",
    "text": "To run the single cell RNA\n\nlibrary(Seurat)\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(SoupX)\nlibrary(DropletUtils)\n\nLoading required package: SingleCellExperiment\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, table,\n    tapply, union, unique, unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nThe following object is masked from 'package:grDevices':\n\n    windows\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\n\nAttaching package: 'SummarizedExperiment'\n\n\nThe following object is masked from 'package:Seurat':\n\n    Assays\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    Assays\n\nlibrary(DoubletFinder)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(SingleR)\nlibrary(celldex)\n\n\nAttaching package: 'celldex'\n\n\nThe following objects are masked from 'package:SingleR':\n\n    BlueprintEncodeData, DatabaseImmuneCellExpressionData,\n    HumanPrimaryCellAtlasData, ImmGenData, MonacoImmuneData,\n    MouseRNAseqData, NovershternHematopoieticData\n\nlibrary(RColorBrewer)\nlibrary(SingleCellExperiment)\n\n\n\n\n\n# Function for running the standard pre-processing on Seurat object\nStandard_PreProcessing_QC &lt;- function(input){\n  # Calculate percentage of mitochondrial counts\n  print(\"Calculate % of mitochondrial counts\")\n  input &lt;- PercentageFeatureSet(input, pattern = \"^MT-\" ,  col.name = \"percent.mt\")\n  \n  # Apply sctransform normalization\n  print(\"SCTransform Normalization\")\n  input &lt;- SCTransform(input, verbose = FALSE)\n  \n  # Perform linear dimensional reduction\n  print(\"Perform linear dimensional reduction\")\n  input &lt;- RunPCA(input ,  verbose = FALSE)\n  \n  # Cluster the cells\n  print(\"Cluster the cells\")\n  input &lt;- FindNeighbors(input, dims = 1:30)\n  input &lt;- FindClusters(input,  verbose = FALSE)\n  \n  # Run non-linear dimensional reduction (UMAP)\n  print(\"Run non-linear dimensional reduction (UMAP)\")\n  input &lt;- RunUMAP(input, dims = 1:30 ,  verbose = FALSE)\n  return(input)\n}\n\n\n\n\n\nsc_SoupX &lt;- load10X(\"D:/Genome_Biology/Reproduce/Pre_Processed\")\n\nLoading raw count data\n\n\nLoading cell-only count data\n\n\nLoading extra analysis data where available\n\n\n\n\n\n\nsc_Seurat &lt;- Read10X(\"D:/Genome_Biology/Reproduce/Pre_Processed/filtered_feature_bc_matrix\")\n# Directory of filtered_feature_bc_matrix processed by cellRangercount\nsc_Seurat &lt;- CreateSeuratObject(counts = sc_Seurat)\nsc_Seurat\n\nAn object of class Seurat \n36601 features across 3569 samples within 1 assay \nActive assay: RNA (36601 features, 0 variable features)\n 1 layer present: counts\n\n# Run standard pre-processing on Seurat object\nsc_Seurat &lt;- Standard_PreProcessing_QC(sc_Seurat)\n\n[1] \"Calculate % of mitochondrial counts\"\n[1] \"SCTransform Normalization\"\n[1] \"Perform linear dimensional reduction\"\n[1] \"Cluster the cells\"\n\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\n\n[1] \"Run non-linear dimensional reduction (UMAP)\"\n\n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n\n# Add clustering information \nclustering_info &lt;- data.frame(Cluster = sc_Seurat@meta.data$SCT_snn_res.0.8)\nhead(clustering_info)\n\n  Cluster\n1       2\n2       8\n3       1\n4       3\n5       0\n6       1\n\ntable(clustering_info)\n\nCluster\n  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16 \n463 460 439 344 306 197 192 184 180 153 137 128 107  99  77  68  35 \n\nrownames(clustering_info) &lt;- rownames(sc_Seurat@meta.data)\nhead(clustering_info)\n\n                   Cluster\nAAACCTGAGGCAGGTT-1       2\nAAACCTGCAAGTAATG-1       8\nAAACCTGTCGCAGGCT-1       1\nAAACCTGTCTGAAAGA-1       3\nAAACCTGTCTGCCAGG-1       0\nAAACCTGTCTTTACAC-1       1\n\nsc_SoupX &lt;- setClusters(sc_SoupX, setNames(clustering_info$Cluster, rownames(clustering_info)))\n\n\n# Provide the list of Immunoglobulin (Ig) genes.\nigGenes &lt;- c(\"IGHA1\", \"IGHA2\", \"IGHG1\", \"IGHG2\", \"IGHG3\", \"IGHG4\", \"IGHD\", \"IGHE\", \n             \"IGHM\", \"IGLC1\", \"IGLC2\", \"IGLC3\", \"IGLC4\", \"IGLC5\", \"IGLC6\", \"IGLC7\", \"IGKC\")\n\n\n# Estimating the contamination fraction\nsc = autoEstCont(sc_SoupX)\n\n934 genes passed tf-idf cut-off and 327 soup quantile filter.  Taking the top 100.\n\n\nUsing 955 independent estimates of rho.\n\n\nEstimated global rho of 0.02\n\n\n\n\n\n\n\n\n\n\n# Estimate non-expressing cells \nuseToEst &lt;- estimateNonExpressingCells(sc_SoupX, nonExpressedGeneList = list(IG = igGenes))\n\n\n# Calculate the contamination fraction\nsc_SoupX &lt;- calculateContaminationFraction(sc_SoupX, list(IG = igGenes), useToEst = useToEst)\n\nEstimated global contamination fraction of 2.32%\n\n\n\nhead(sc_SoupX$soupProfile[order(sc_SoupX$soupProfile$est, decreasing = TRUE), ], n = 20)\n\n               est counts\nIGKC   0.101318087 254001\nIGHG4  0.039280150  98474\nIGLC2  0.034470751  86417\nMALAT1 0.016607325  41634\nB2M    0.016472102  41295\nIGHG1  0.013128618  32913\nJCHAIN 0.012513133  31370\nIGLC1  0.010292521  25803\nIGHA1  0.007778326  19500\nTMSB4X 0.007342341  18407\nMT-CO1 0.007055939  17689\nMT-CO2 0.006246993  15661\nRPLP1  0.006212689  15575\nRPL41  0.006154451  15429\nMT-CO3 0.005973356  14975\nTMSB10 0.005548540  13910\nRPL10  0.005515831  13828\nRPS18  0.005437250  13631\nRPS19  0.005298835  13284\nRPL13A 0.004715261  11821\n\n\n\n# Correct the expression profile \nsc_SoupX_output &lt;- adjustCounts(sc_SoupX)\n\nWarning in sparseMatrix(i = out@i[w] + 1, j = out@j[w] + 1, x = out@x[w], :\n'giveCsparse' is deprecated; setting repr=\"T\" for you\n\n\nExpanding counts from 17 clusters to 3569 cells.\n\n\n\n# Save corrected expression matrices \nDropletUtils:::write10xCounts(\"D:/Genome_Biology/Reproduce/Pre_Processed/SoupX\",sc_SoupX_output)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Acknowledgements\nI would like to express my sincere gratitude to all those who have contributed to the successful completion of this internship.\nFirst and foremost, I am immensely grateful to Prof. Muratani of the Genome Biology Team at the Tsukuba University for his invaluable guidance, support, and encouragement during my research period. His insights and expertise have been instrumental in the completion of this final presentation.\nI am thankful to my Japan’s advisor, Ms. Cohen of the International office, Tsukuba University – Japan, for her continuous support and valuable suggestions throughout the program. Her encouragement has been a source of motivation for me.\nI would also like to extend my sincere thanks to my Teacher Assistant (TA) Liao and Yuka for helping me during this program. The knowledge and experience gained will undoubtedly be beneficial in my future.\nI would also like to acknowledge the contributions of my colleagues and team members at the Genome Biology Team. Their collaboration and support fostered a stimulating and productive work environment.\nFinally, I extend my heartfelt thanks to my family and friends for their unwavering belief in me and their constant support. Their encouragement has been a source of strength throughout this journey."
  },
  {
    "objectID": "index.html#loading-required-libraries",
    "href": "index.html#loading-required-libraries",
    "title": "ScRNA",
    "section": "",
    "text": "To run the single cell RNA\n\nlibrary(Seurat)\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(SoupX)\nlibrary(DropletUtils)\n\nLoading required package: SingleCellExperiment\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, table,\n    tapply, union, unique, unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nThe following object is masked from 'package:grDevices':\n\n    windows\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\n\nAttaching package: 'SummarizedExperiment'\n\n\nThe following object is masked from 'package:Seurat':\n\n    Assays\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    Assays\n\nlibrary(DoubletFinder)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(SingleR)\nlibrary(celldex)\n\n\nAttaching package: 'celldex'\n\n\nThe following objects are masked from 'package:SingleR':\n\n    BlueprintEncodeData, DatabaseImmuneCellExpressionData,\n    HumanPrimaryCellAtlasData, ImmGenData, MonacoImmuneData,\n    MouseRNAseqData, NovershternHematopoieticData\n\nlibrary(RColorBrewer)\nlibrary(SingleCellExperiment)"
  },
  {
    "objectID": "index.html#create-the-function",
    "href": "index.html#create-the-function",
    "title": "ScRNA",
    "section": "",
    "text": "# Function for running the standard pre-processing on Seurat object\nStandard_PreProcessing_QC &lt;- function(input){\n  # Calculate percentage of mitochondrial counts\n  print(\"Calculate % of mitochondrial counts\")\n  input &lt;- PercentageFeatureSet(input, pattern = \"^MT-\" ,  col.name = \"percent.mt\")\n  \n  # Apply sctransform normalization\n  print(\"SCTransform Normalization\")\n  input &lt;- SCTransform(input, verbose = FALSE)\n  \n  # Perform linear dimensional reduction\n  print(\"Perform linear dimensional reduction\")\n  input &lt;- RunPCA(input ,  verbose = FALSE)\n  \n  # Cluster the cells\n  print(\"Cluster the cells\")\n  input &lt;- FindNeighbors(input, dims = 1:30)\n  input &lt;- FindClusters(input,  verbose = FALSE)\n  \n  # Run non-linear dimensional reduction (UMAP)\n  print(\"Run non-linear dimensional reduction (UMAP)\")\n  input &lt;- RunUMAP(input, dims = 1:30 ,  verbose = FALSE)\n  return(input)\n}"
  },
  {
    "objectID": "index.html#create-required-object-soup-channel",
    "href": "index.html#create-required-object-soup-channel",
    "title": "ScRNA",
    "section": "",
    "text": "sc_SoupX &lt;- load10X(\"D:/Genome_Biology/Reproduce/Pre_Processed\")\n\nLoading raw count data\n\n\nLoading cell-only count data\n\n\nLoading extra analysis data where available"
  },
  {
    "objectID": "index.html#create-required-object-seurat-object",
    "href": "index.html#create-required-object-seurat-object",
    "title": "ScRNA",
    "section": "",
    "text": "sc_Seurat &lt;- Read10X(\"D:/Genome_Biology/Reproduce/Pre_Processed/filtered_feature_bc_matrix\")\n# Directory of filtered_feature_bc_matrix processed by cellRangercount\nsc_Seurat &lt;- CreateSeuratObject(counts = sc_Seurat)\nsc_Seurat\n\nAn object of class Seurat \n36601 features across 3569 samples within 1 assay \nActive assay: RNA (36601 features, 0 variable features)\n 1 layer present: counts\n\n# Run standard pre-processing on Seurat object\nsc_Seurat &lt;- Standard_PreProcessing_QC(sc_Seurat)\n\n[1] \"Calculate % of mitochondrial counts\"\n[1] \"SCTransform Normalization\"\n[1] \"Perform linear dimensional reduction\"\n[1] \"Cluster the cells\"\n\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\n\n[1] \"Run non-linear dimensional reduction (UMAP)\"\n\n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n\n# Add clustering information \nclustering_info &lt;- data.frame(Cluster = sc_Seurat@meta.data$SCT_snn_res.0.8)\nhead(clustering_info)\n\n  Cluster\n1       2\n2       8\n3       1\n4       3\n5       0\n6       1\n\ntable(clustering_info)\n\nCluster\n  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16 \n463 460 439 344 306 197 192 184 180 153 137 128 107  99  77  68  35 \n\nrownames(clustering_info) &lt;- rownames(sc_Seurat@meta.data)\nhead(clustering_info)\n\n                   Cluster\nAAACCTGAGGCAGGTT-1       2\nAAACCTGCAAGTAATG-1       8\nAAACCTGTCGCAGGCT-1       1\nAAACCTGTCTGAAAGA-1       3\nAAACCTGTCTGCCAGG-1       0\nAAACCTGTCTTTACAC-1       1\n\nsc_SoupX &lt;- setClusters(sc_SoupX, setNames(clustering_info$Cluster, rownames(clustering_info)))\n\n\n# Provide the list of Immunoglobulin (Ig) genes.\nigGenes &lt;- c(\"IGHA1\", \"IGHA2\", \"IGHG1\", \"IGHG2\", \"IGHG3\", \"IGHG4\", \"IGHD\", \"IGHE\", \n             \"IGHM\", \"IGLC1\", \"IGLC2\", \"IGLC3\", \"IGLC4\", \"IGLC5\", \"IGLC6\", \"IGLC7\", \"IGKC\")\n\n\n# Estimating the contamination fraction\nsc = autoEstCont(sc_SoupX)\n\n934 genes passed tf-idf cut-off and 327 soup quantile filter.  Taking the top 100.\n\n\nUsing 955 independent estimates of rho.\n\n\nEstimated global rho of 0.02\n\n\n\n\n\n\n\n\n\n\n# Estimate non-expressing cells \nuseToEst &lt;- estimateNonExpressingCells(sc_SoupX, nonExpressedGeneList = list(IG = igGenes))\n\n\n# Calculate the contamination fraction\nsc_SoupX &lt;- calculateContaminationFraction(sc_SoupX, list(IG = igGenes), useToEst = useToEst)\n\nEstimated global contamination fraction of 2.32%\n\n\n\nhead(sc_SoupX$soupProfile[order(sc_SoupX$soupProfile$est, decreasing = TRUE), ], n = 20)\n\n               est counts\nIGKC   0.101318087 254001\nIGHG4  0.039280150  98474\nIGLC2  0.034470751  86417\nMALAT1 0.016607325  41634\nB2M    0.016472102  41295\nIGHG1  0.013128618  32913\nJCHAIN 0.012513133  31370\nIGLC1  0.010292521  25803\nIGHA1  0.007778326  19500\nTMSB4X 0.007342341  18407\nMT-CO1 0.007055939  17689\nMT-CO2 0.006246993  15661\nRPLP1  0.006212689  15575\nRPL41  0.006154451  15429\nMT-CO3 0.005973356  14975\nTMSB10 0.005548540  13910\nRPL10  0.005515831  13828\nRPS18  0.005437250  13631\nRPS19  0.005298835  13284\nRPL13A 0.004715261  11821\n\n\n\n# Correct the expression profile \nsc_SoupX_output &lt;- adjustCounts(sc_SoupX)\n\nWarning in sparseMatrix(i = out@i[w] + 1, j = out@j[w] + 1, x = out@x[w], :\n'giveCsparse' is deprecated; setting repr=\"T\" for you\n\n\nExpanding counts from 17 clusters to 3569 cells.\n\n\n\n# Save corrected expression matrices \nDropletUtils:::write10xCounts(\"D:/Genome_Biology/Reproduce/Pre_Processed/SoupX\",sc_SoupX_output)"
  },
  {
    "objectID": "Remove_MT_Gene.html",
    "href": "Remove_MT_Gene.html",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "",
    "text": "library(Seurat)\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(SoupX)\nlibrary(DropletUtils)\n\nLoading required package: SingleCellExperiment\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, table,\n    tapply, union, unique, unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nThe following object is masked from 'package:grDevices':\n\n    windows\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\n\nAttaching package: 'SummarizedExperiment'\n\n\nThe following object is masked from 'package:Seurat':\n\n    Assays\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    Assays\n\nlibrary(DoubletFinder)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(SingleR)\nlibrary(celldex)\n\n\nAttaching package: 'celldex'\n\n\nThe following objects are masked from 'package:SingleR':\n\n    BlueprintEncodeData, DatabaseImmuneCellExpressionData,\n    HumanPrimaryCellAtlasData, ImmGenData, MonacoImmuneData,\n    MouseRNAseqData, NovershternHematopoieticData\n\nlibrary(RColorBrewer)\nlibrary(SingleCellExperiment)\n\n\n\n\n\n# Create Seurat object\nsc_Seurat &lt;- Read10X(data.dir = \"D:/Genome_Biology/Reproduce/Pre_Processed/SoupX\") # Directory of corrected expression matrices processed by SoupX\nsc_Seurat &lt;- CreateSeuratObject(counts = sc_Seurat)\nsc_Seurat_procesing &lt;- sc_Seurat\nsc_Seurat_procesing\n\nAn object of class Seurat \n36601 features across 3569 samples within 1 assay \nActive assay: RNA (36601 features, 0 variable features)\n 1 layer present: counts\n\n\n\n\n\n\n# Calculate percentage of MT counts\nsc_Seurat_procesing[[\"percent.mt\"]] &lt;- PercentageFeatureSet(sc_Seurat_procesing, pattern = \"^MT-\")\n\n\nmeta &lt;- sc_Seurat_procesing@meta.data\ndim(meta)\n\n[1] 3569    4\n\n\n\nBiocManager::install('glmGamPoi')\n\nBioconductor version 3.19 (BiocManager 1.30.25), R 4.4.1 (2024-06-14 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'glmGamPoi'\n\n\nOld packages: 'AlgDesign', 'askpass', 'bit', 'bit64', 'boot', 'broom', 'bslib',\n  'cards', 'cinterpolate', 'colorspace', 'commonmark', 'cpp11', 'curl',\n  'data.table', 'datawizard', 'digest', 'e1071', 'edgeR', 'emmeans',\n  'evaluate', 'fitdistrplus', 'foreign', 'glue', 'gt', 'gtsummary', 'insight',\n  'jsonlite', 'MASS', 'MCMCpack', 'nlme', 'odin', 'openssl', 'parameters',\n  'patchwork', 'performance', 'ps', 'ragg', 'raster', 'rbibutils', 'Rcpp',\n  'reactR', 'ring', 'rio', 'rmarkdown', 'robustbase', 'rstudioapi', 's2',\n  'see', 'sf', 'SparseM', 'survival', 'sys', 'terra', 'tinytex', 'uuid', 'V8',\n  'vcd', 'withr', 'wk', 'writexl', 'xfun', 'yaml'\n\nlibrary(glmGamPoi)\n\n\nAttaching package: 'glmGamPoi'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    vars\n\n\n\nsc_Seurat_procesing &lt;- SCTransform(sc_Seurat_procesing, verbose = FALSE)\n\n\nsc_Seurat_procesing &lt;- RunPCA(sc_Seurat_procesing ,  verbose = FALSE)\n\n\nsc_Seurat_procesing &lt;- FindNeighbors(sc_Seurat_procesing, dims = 1:30)\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\n\n\nsc_Seurat_procesing &lt;- FindClusters(sc_Seurat_procesing,  verbose = FALSE)\n\n\nsc_Seurat_procesing &lt;- RunUMAP(sc_Seurat_procesing, dims = 1:30 ,  verbose = FALSE)\n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n\n\n\n\n# Exclude cells that have more than 10% of mitochondrial counts\nsc_Seurat_procesing &lt;- subset(sc_Seurat_procesing, subset =  percent.mt &lt; 10)\n\n\n# Extract the cells that pass % mitochondrial cut-off\nsc_Seurat_procesing &lt;- subset(sc_Seurat , cells = colnames(sc_Seurat_procesing))\nsc_Seurat_procesing\n\nAn object of class Seurat \n36601 features across 2986 samples within 1 assay \nActive assay: RNA (36601 features, 0 variable features)\n 1 layer present: counts"
  },
  {
    "objectID": "Remove_MT_Gene.html#loading-libraries",
    "href": "Remove_MT_Gene.html#loading-libraries",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "",
    "text": "library(Seurat)\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(SoupX)\nlibrary(DropletUtils)\n\nLoading required package: SingleCellExperiment\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, table,\n    tapply, union, unique, unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nThe following object is masked from 'package:grDevices':\n\n    windows\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\n\nAttaching package: 'SummarizedExperiment'\n\n\nThe following object is masked from 'package:Seurat':\n\n    Assays\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    Assays\n\nlibrary(DoubletFinder)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(SingleR)\nlibrary(celldex)\n\n\nAttaching package: 'celldex'\n\n\nThe following objects are masked from 'package:SingleR':\n\n    BlueprintEncodeData, DatabaseImmuneCellExpressionData,\n    HumanPrimaryCellAtlasData, ImmGenData, MonacoImmuneData,\n    MouseRNAseqData, NovershternHematopoieticData\n\nlibrary(RColorBrewer)\nlibrary(SingleCellExperiment)"
  },
  {
    "objectID": "Remove_MT_Gene.html#create-seurat-object",
    "href": "Remove_MT_Gene.html#create-seurat-object",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "",
    "text": "# Create Seurat object\nsc_Seurat &lt;- Read10X(data.dir = \"D:/Genome_Biology/Reproduce/Pre_Processed/SoupX\") # Directory of corrected expression matrices processed by SoupX\nsc_Seurat &lt;- CreateSeuratObject(counts = sc_Seurat)\nsc_Seurat_procesing &lt;- sc_Seurat\nsc_Seurat_procesing\n\nAn object of class Seurat \n36601 features across 3569 samples within 1 assay \nActive assay: RNA (36601 features, 0 variable features)\n 1 layer present: counts"
  },
  {
    "objectID": "Remove_MT_Gene.html#calculate-percentage-mt-counts",
    "href": "Remove_MT_Gene.html#calculate-percentage-mt-counts",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "",
    "text": "# Calculate percentage of MT counts\nsc_Seurat_procesing[[\"percent.mt\"]] &lt;- PercentageFeatureSet(sc_Seurat_procesing, pattern = \"^MT-\")\n\n\nmeta &lt;- sc_Seurat_procesing@meta.data\ndim(meta)\n\n[1] 3569    4\n\n\n\nBiocManager::install('glmGamPoi')\n\nBioconductor version 3.19 (BiocManager 1.30.25), R 4.4.1 (2024-06-14 ucrt)\n\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'glmGamPoi'\n\n\nOld packages: 'AlgDesign', 'askpass', 'bit', 'bit64', 'boot', 'broom', 'bslib',\n  'cards', 'cinterpolate', 'colorspace', 'commonmark', 'cpp11', 'curl',\n  'data.table', 'datawizard', 'digest', 'e1071', 'edgeR', 'emmeans',\n  'evaluate', 'fitdistrplus', 'foreign', 'glue', 'gt', 'gtsummary', 'insight',\n  'jsonlite', 'MASS', 'MCMCpack', 'nlme', 'odin', 'openssl', 'parameters',\n  'patchwork', 'performance', 'ps', 'ragg', 'raster', 'rbibutils', 'Rcpp',\n  'reactR', 'ring', 'rio', 'rmarkdown', 'robustbase', 'rstudioapi', 's2',\n  'see', 'sf', 'SparseM', 'survival', 'sys', 'terra', 'tinytex', 'uuid', 'V8',\n  'vcd', 'withr', 'wk', 'writexl', 'xfun', 'yaml'\n\nlibrary(glmGamPoi)\n\n\nAttaching package: 'glmGamPoi'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    vars\n\n\n\nsc_Seurat_procesing &lt;- SCTransform(sc_Seurat_procesing, verbose = FALSE)\n\n\nsc_Seurat_procesing &lt;- RunPCA(sc_Seurat_procesing ,  verbose = FALSE)\n\n\nsc_Seurat_procesing &lt;- FindNeighbors(sc_Seurat_procesing, dims = 1:30)\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\n\n\nsc_Seurat_procesing &lt;- FindClusters(sc_Seurat_procesing,  verbose = FALSE)\n\n\nsc_Seurat_procesing &lt;- RunUMAP(sc_Seurat_procesing, dims = 1:30 ,  verbose = FALSE)\n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session"
  },
  {
    "objectID": "Remove_MT_Gene.html#quality-mt-genes",
    "href": "Remove_MT_Gene.html#quality-mt-genes",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "",
    "text": "# Exclude cells that have more than 10% of mitochondrial counts\nsc_Seurat_procesing &lt;- subset(sc_Seurat_procesing, subset =  percent.mt &lt; 10)\n\n\n# Extract the cells that pass % mitochondrial cut-off\nsc_Seurat_procesing &lt;- subset(sc_Seurat , cells = colnames(sc_Seurat_procesing))\nsc_Seurat_procesing\n\nAn object of class Seurat \n36601 features across 2986 samples within 1 assay \nActive assay: RNA (36601 features, 0 variable features)\n 1 layer present: counts"
  },
  {
    "objectID": "Remove_MT_Gene.html#create-the-function",
    "href": "Remove_MT_Gene.html#create-the-function",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "Create the function",
    "text": "Create the function\n\n# Function for running the standard pre-processing on Seurat object\nsc_Seurat_procesing_2 &lt;- function(input){\n\n  # Apply sctransform normalization\n  print(\"Normalize Data\")\n  input &lt;- NormalizeData(input, verbose = FALSE)\n  \n  #Find variable Features \n  print(\"Find variable Features\")\n  input &lt;- FindVariableFeatures(input, selection.method = \"vst\", nfeatures = 2000)\n  \n  # Scale data \n  print(\"Scale data\")\n  input &lt;- ScaleData(input)\n  \n  # Run PCA\n  print(\"Run PCA\")\n  input &lt;- RunPCA(input,  verbose = FALSE)\n  \n  # Find neighbors\n  print(\"Find Neigbors\")\n  input &lt;- FindNeighbors(input, dims = 1:30)\n  \n  #Find clusters\n  print(\"Find Cluster\")\n  input &lt;- FindClusters(input,  verbose = FALSE)\n  \n  # Run non-linear dimensional reduction (UMAP)\n  print(\"Run non-linear dimensional reduction (UMAP)\")\n  input &lt;- RunUMAP(input, dims = 1:30 ,  verbose = FALSE)\n  return(input)\n}"
  },
  {
    "objectID": "Remove_MT_Gene.html#processing",
    "href": "Remove_MT_Gene.html#processing",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "Processing",
    "text": "Processing\n\nsc_Seurat_procesing &lt;- sc_Seurat_procesing_2(sc_Seurat_procesing)\n\n[1] \"Normalize Data\"\n[1] \"Find variable Features\"\n\n\nFinding variable features for layer counts\n\n\n[1] \"Scale data\"\n\n\nCentering and scaling data matrix\n\n\n[1] \"Run PCA\"\n[1] \"Find Neigbors\"\n\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\n\n[1] \"Find Cluster\"\n[1] \"Run non-linear dimensional reduction (UMAP)\""
  },
  {
    "objectID": "Remove_MT_Gene.html#running-doublet-finders",
    "href": "Remove_MT_Gene.html#running-doublet-finders",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "Running Doublet Finders",
    "text": "Running Doublet Finders\n\nsweep.res.list &lt;- paramSweep(sc_Seurat_procesing, PCs = 1:30, sct = FALSE,num.cores = 1) # num.score default = 1\n\nLoading required package: fields\n\n\nLoading required package: spam\n\n\nSpam version 2.11-0 (2024-10-03) is loaded.\nType 'help( Spam)' or 'demo( spam)' for a short introduction \nand overview of this package.\nHelp for individual functions is also obtained by adding the\nsuffix '.spam' to the function name, e.g. 'help( chol.spam)'.\n\n\n\nAttaching package: 'spam'\n\n\nThe following object is masked from 'package:stats4':\n\n    mle\n\n\nThe following objects are masked from 'package:base':\n\n    backsolve, forwardsolve\n\n\nLoading required package: viridisLite\n\n\n\nTry help(fields) to get started.\n\n\nLoading required package: parallel\n\n\n[1] \"Creating artificial doublets for pN = 5%\"\n[1] \"Creating Seurat object...\"\n[1] \"Normalizing Seurat object...\"\n\n\nNormalizing layer: counts\n\n\n[1] \"Finding variable genes...\"\n\n\nFinding variable features for layer counts\n\n\n[1] \"Scaling data...\"\n\n\nCentering and scaling data matrix\n\n\n[1] \"Running PCA...\"\n[1] \"Calculating PC distance matrix...\"\n[1] \"Defining neighborhoods...\"\n[1] \"Computing pANN across all pK...\"\n[1] \"pK = 0.005...\"\n[1] \"pK = 0.01...\"\n[1] \"pK = 0.02...\"\n[1] \"pK = 0.03...\"\n[1] \"pK = 0.04...\"\n[1] \"pK = 0.05...\"\n[1] \"pK = 0.06...\"\n[1] \"pK = 0.07...\"\n[1] \"pK = 0.08...\"\n[1] \"pK = 0.09...\"\n[1] \"pK = 0.1...\"\n[1] \"pK = 0.11...\"\n[1] \"pK = 0.12...\"\n[1] \"pK = 0.13...\"\n[1] \"pK = 0.14...\"\n[1] \"pK = 0.15...\"\n[1] \"pK = 0.16...\"\n[1] \"pK = 0.17...\"\n[1] \"pK = 0.18...\"\n[1] \"pK = 0.19...\"\n[1] \"pK = 0.2...\"\n[1] \"pK = 0.21...\"\n[1] \"pK = 0.22...\"\n[1] \"pK = 0.23...\"\n[1] \"pK = 0.24...\"\n[1] \"pK = 0.25...\"\n[1] \"pK = 0.26...\"\n[1] \"pK = 0.27...\"\n[1] \"pK = 0.28...\"\n[1] \"pK = 0.29...\"\n[1] \"pK = 0.3...\"\n[1] \"Creating artificial doublets for pN = 10%\"\n[1] \"Creating Seurat object...\"\n[1] \"Normalizing Seurat object...\"\n\n\nNormalizing layer: counts\n\n\n[1] \"Finding variable genes...\"\n\n\nFinding variable features for layer counts\n\n\n[1] \"Scaling data...\"\n\n\nCentering and scaling data matrix\n\n\n[1] \"Running PCA...\"\n[1] \"Calculating PC distance matrix...\"\n[1] \"Defining neighborhoods...\"\n[1] \"Computing pANN across all pK...\"\n[1] \"pK = 0.005...\"\n[1] \"pK = 0.01...\"\n[1] \"pK = 0.02...\"\n[1] \"pK = 0.03...\"\n[1] \"pK = 0.04...\"\n[1] \"pK = 0.05...\"\n[1] \"pK = 0.06...\"\n[1] \"pK = 0.07...\"\n[1] \"pK = 0.08...\"\n[1] \"pK = 0.09...\"\n[1] \"pK = 0.1...\"\n[1] \"pK = 0.11...\"\n[1] \"pK = 0.12...\"\n[1] \"pK = 0.13...\"\n[1] \"pK = 0.14...\"\n[1] \"pK = 0.15...\"\n[1] \"pK = 0.16...\"\n[1] \"pK = 0.17...\"\n[1] \"pK = 0.18...\"\n[1] \"pK = 0.19...\"\n[1] \"pK = 0.2...\"\n[1] \"pK = 0.21...\"\n[1] \"pK = 0.22...\"\n[1] \"pK = 0.23...\"\n[1] \"pK = 0.24...\"\n[1] \"pK = 0.25...\"\n[1] \"pK = 0.26...\"\n[1] \"pK = 0.27...\"\n[1] \"pK = 0.28...\"\n[1] \"pK = 0.29...\"\n[1] \"pK = 0.3...\"\n[1] \"Creating artificial doublets for pN = 15%\"\n[1] \"Creating Seurat object...\"\n[1] \"Normalizing Seurat object...\"\n\n\nNormalizing layer: counts\n\n\n[1] \"Finding variable genes...\"\n\n\nFinding variable features for layer counts\n\n\n[1] \"Scaling data...\"\n\n\nCentering and scaling data matrix\n\n\n[1] \"Running PCA...\"\n[1] \"Calculating PC distance matrix...\"\n[1] \"Defining neighborhoods...\"\n[1] \"Computing pANN across all pK...\"\n[1] \"pK = 0.005...\"\n[1] \"pK = 0.01...\"\n[1] \"pK = 0.02...\"\n[1] \"pK = 0.03...\"\n[1] \"pK = 0.04...\"\n[1] \"pK = 0.05...\"\n[1] \"pK = 0.06...\"\n[1] \"pK = 0.07...\"\n[1] \"pK = 0.08...\"\n[1] \"pK = 0.09...\"\n[1] \"pK = 0.1...\"\n[1] \"pK = 0.11...\"\n[1] \"pK = 0.12...\"\n[1] \"pK = 0.13...\"\n[1] \"pK = 0.14...\"\n[1] \"pK = 0.15...\"\n[1] \"pK = 0.16...\"\n[1] \"pK = 0.17...\"\n[1] \"pK = 0.18...\"\n[1] \"pK = 0.19...\"\n[1] \"pK = 0.2...\"\n[1] \"pK = 0.21...\"\n[1] \"pK = 0.22...\"\n[1] \"pK = 0.23...\"\n[1] \"pK = 0.24...\"\n[1] \"pK = 0.25...\"\n[1] \"pK = 0.26...\"\n[1] \"pK = 0.27...\"\n[1] \"pK = 0.28...\"\n[1] \"pK = 0.29...\"\n[1] \"pK = 0.3...\"\n[1] \"Creating artificial doublets for pN = 20%\"\n[1] \"Creating Seurat object...\"\n[1] \"Normalizing Seurat object...\"\n\n\nNormalizing layer: counts\n\n\n[1] \"Finding variable genes...\"\n\n\nFinding variable features for layer counts\n\n\n[1] \"Scaling data...\"\n\n\nCentering and scaling data matrix\n\n\n[1] \"Running PCA...\"\n[1] \"Calculating PC distance matrix...\"\n[1] \"Defining neighborhoods...\"\n[1] \"Computing pANN across all pK...\"\n[1] \"pK = 0.005...\"\n[1] \"pK = 0.01...\"\n[1] \"pK = 0.02...\"\n[1] \"pK = 0.03...\"\n[1] \"pK = 0.04...\"\n[1] \"pK = 0.05...\"\n[1] \"pK = 0.06...\"\n[1] \"pK = 0.07...\"\n[1] \"pK = 0.08...\"\n[1] \"pK = 0.09...\"\n[1] \"pK = 0.1...\"\n[1] \"pK = 0.11...\"\n[1] \"pK = 0.12...\"\n[1] \"pK = 0.13...\"\n[1] \"pK = 0.14...\"\n[1] \"pK = 0.15...\"\n[1] \"pK = 0.16...\"\n[1] \"pK = 0.17...\"\n[1] \"pK = 0.18...\"\n[1] \"pK = 0.19...\"\n[1] \"pK = 0.2...\"\n[1] \"pK = 0.21...\"\n[1] \"pK = 0.22...\"\n[1] \"pK = 0.23...\"\n[1] \"pK = 0.24...\"\n[1] \"pK = 0.25...\"\n[1] \"pK = 0.26...\"\n[1] \"pK = 0.27...\"\n[1] \"pK = 0.28...\"\n[1] \"pK = 0.29...\"\n[1] \"pK = 0.3...\"\n[1] \"Creating artificial doublets for pN = 25%\"\n[1] \"Creating Seurat object...\"\n[1] \"Normalizing Seurat object...\"\n\n\nNormalizing layer: counts\n\n\n[1] \"Finding variable genes...\"\n\n\nFinding variable features for layer counts\n\n\n[1] \"Scaling data...\"\n\n\nCentering and scaling data matrix\n\n\n[1] \"Running PCA...\"\n[1] \"Calculating PC distance matrix...\"\n[1] \"Defining neighborhoods...\"\n[1] \"Computing pANN across all pK...\"\n[1] \"pK = 0.005...\"\n[1] \"pK = 0.01...\"\n[1] \"pK = 0.02...\"\n[1] \"pK = 0.03...\"\n[1] \"pK = 0.04...\"\n[1] \"pK = 0.05...\"\n[1] \"pK = 0.06...\"\n[1] \"pK = 0.07...\"\n[1] \"pK = 0.08...\"\n[1] \"pK = 0.09...\"\n[1] \"pK = 0.1...\"\n[1] \"pK = 0.11...\"\n[1] \"pK = 0.12...\"\n[1] \"pK = 0.13...\"\n[1] \"pK = 0.14...\"\n[1] \"pK = 0.15...\"\n[1] \"pK = 0.16...\"\n[1] \"pK = 0.17...\"\n[1] \"pK = 0.18...\"\n[1] \"pK = 0.19...\"\n[1] \"pK = 0.2...\"\n[1] \"pK = 0.21...\"\n[1] \"pK = 0.22...\"\n[1] \"pK = 0.23...\"\n[1] \"pK = 0.24...\"\n[1] \"pK = 0.25...\"\n[1] \"pK = 0.26...\"\n[1] \"pK = 0.27...\"\n[1] \"pK = 0.28...\"\n[1] \"pK = 0.29...\"\n[1] \"pK = 0.3...\"\n[1] \"Creating artificial doublets for pN = 30%\"\n[1] \"Creating Seurat object...\"\n[1] \"Normalizing Seurat object...\"\n\n\nNormalizing layer: counts\n\n\n[1] \"Finding variable genes...\"\n\n\nFinding variable features for layer counts\n\n\n[1] \"Scaling data...\"\n\n\nCentering and scaling data matrix\n\n\n[1] \"Running PCA...\"\n[1] \"Calculating PC distance matrix...\"\n[1] \"Defining neighborhoods...\"\n[1] \"Computing pANN across all pK...\"\n[1] \"pK = 0.005...\"\n[1] \"pK = 0.01...\"\n[1] \"pK = 0.02...\"\n[1] \"pK = 0.03...\"\n[1] \"pK = 0.04...\"\n[1] \"pK = 0.05...\"\n[1] \"pK = 0.06...\"\n[1] \"pK = 0.07...\"\n[1] \"pK = 0.08...\"\n[1] \"pK = 0.09...\"\n[1] \"pK = 0.1...\"\n[1] \"pK = 0.11...\"\n[1] \"pK = 0.12...\"\n[1] \"pK = 0.13...\"\n[1] \"pK = 0.14...\"\n[1] \"pK = 0.15...\"\n[1] \"pK = 0.16...\"\n[1] \"pK = 0.17...\"\n[1] \"pK = 0.18...\"\n[1] \"pK = 0.19...\"\n[1] \"pK = 0.2...\"\n[1] \"pK = 0.21...\"\n[1] \"pK = 0.22...\"\n[1] \"pK = 0.23...\"\n[1] \"pK = 0.24...\"\n[1] \"pK = 0.25...\"\n[1] \"pK = 0.26...\"\n[1] \"pK = 0.27...\"\n[1] \"pK = 0.28...\"\n[1] \"pK = 0.29...\"\n[1] \"pK = 0.3...\"\n\n\n\nsweep.stats &lt;- summarizeSweep(sweep.res.list, GT = FALSE)\n\nLoading required package: KernSmooth\n\n\nKernSmooth 2.23 loaded\nCopyright M. P. Wand 1997-2009\n\n\nLoading required package: ROCR\n\npK_value &lt;- find.pK(sweep.stats)\n\n\n\n\n\n\n\n\nNULL\n\n\n\nVisualize pK value\n\n# Visualize the pK value at maximum mean-variance-normalized bimodality coefficient (MeanBC)  \nggplot(pK_value, aes(pK, MeanBC, group = 1)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\n\n\n\n\n\nExtract pK value\n\n# Extract the pK value at maximum mean-variance-normalized bimodality coefficient (MeanBC)\nmax(pK_value$MeanBC)\n\n[1] 0.8041912\n\npK &lt;- subset(pK_value, pK_value$MeanBC==max(pK_value$MeanBC),2)\npK\n\n    pK\n3 0.02\n\npK &lt;- as.numeric(as.character.factor(pK[1,1]))\n\n\n\nPredict Doublets\n\n# Predict doublets \nannotations &lt;- sc_Seurat_procesing@meta.data$seurat_clusters\n\nhomotypic.prop &lt;- modelHomotypic(annotations)\n\nnExp_poi &lt;- round(0.04*length(sc_Seurat_procesing%&gt;%colnames))  # Assuming 4.0% doublet formation rate according to the 10x protocol\n\nnExp_poi.adj &lt;- round(nExp_poi*(1-homotypic.prop))\n\n\nsc_Seurat_procesing &lt;- doubletFinder(sc_Seurat_procesing, \n                                        PCs = 1:30, \n                                        pN = 0.25, \n                                        pK = pK, \n                                        nExp = nExp_poi, \n                                        reuse.pANN = FALSE, \n                                        sct = FALSE)\n\n[1] \"Creating 995 artificial doublets...\"\n[1] \"Creating Seurat object...\"\n[1] \"Normalizing Seurat object...\"\n\n\nNormalizing layer: counts\n\n\n[1] \"Finding variable genes...\"\n\n\nFinding variable features for layer counts\n\n\n[1] \"Scaling data...\"\n\n\nCentering and scaling data matrix\n\n\n[1] \"Running PCA...\"\n[1] \"Calculating PC distance matrix...\"\n[1] \"Computing pANN...\"\n[1] \"Classifying doublets..\"\n\ncolnames(sc_Seurat_procesing@meta.data)[length(sc_Seurat_procesing@meta.data)] &lt;- \"DoubletFinder\"\n\n\n\nVisualize and Exclude doublets\n\n# Visualise the doublets \nDimPlot(sc_Seurat_procesing , group.by = \"DoubletFinder\" , cols = c(\"yellow\" , \"grey\"))\n\n\n\n\n\n\n\n\n\n# Exclude the doublets\nsc_Seurat &lt;- subset(sc_Seurat , cells =  rownames(sc_Seurat_procesing@meta.data[sc_Seurat_procesing@meta.data$DoubletFinder == \"Singlet\",]))\nsc_Seurat\n\nAn object of class Seurat \n36601 features across 2867 samples within 1 assay \nActive assay: RNA (36601 features, 0 variable features)\n 1 layer present: counts\n\n\n\nsaveRDS(sc_Seurat, file = \"D:/Genome_Biology/Reproduce/Pre_Processed/Final_Preprocessed.rds\")"
  },
  {
    "objectID": "Remove_MT_Gene.html#load-libraries",
    "href": "Remove_MT_Gene.html#load-libraries",
    "title": "Remove Mitochondria Gene and Exclude Doublet",
    "section": "",
    "text": "library(Seurat)\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(SoupX)\nlibrary(DropletUtils)\n\nLoading required package: SingleCellExperiment\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, table,\n    tapply, union, unique, unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nThe following object is masked from 'package:grDevices':\n\n    windows\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\n\nAttaching package: 'SummarizedExperiment'\n\n\nThe following object is masked from 'package:Seurat':\n\n    Assays\n\n\nThe following object is masked from 'package:SeuratObject':\n\n    Assays\n\nlibrary(DoubletFinder)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(SingleR)\nlibrary(celldex)\n\n\nAttaching package: 'celldex'\n\n\nThe following objects are masked from 'package:SingleR':\n\n    BlueprintEncodeData, DatabaseImmuneCellExpressionData,\n    HumanPrimaryCellAtlasData, ImmGenData, MonacoImmuneData,\n    MouseRNAseqData, NovershternHematopoieticData\n\nlibrary(RColorBrewer)\nlibrary(SingleCellExperiment)"
  }
]